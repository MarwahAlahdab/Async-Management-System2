// <auto-generated />
using Async2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Async2.Migrations
{
    [DbContext(typeof(AsyncDBContext))]
    partial class AsyncDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Async2.Models.Amenity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "coffee maker"
                        },
                        new
                        {
                            ID = 2,
                            Name = "air conditioning"
                        },
                        new
                        {
                            ID = 3,
                            Name = "ocean view"
                        });
                });

            modelBuilder.Entity("Async2.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "amman",
                            Country = "country 1",
                            Name = "Hotel 1",
                            Phone = "123-456-7890",
                            State = "state1",
                            StreetAddress = "Address1"
                        },
                        new
                        {
                            Id = 2,
                            City = "amman",
                            Country = "country 2",
                            Name = "Hotel 2",
                            Phone = "123-456-7890",
                            State = "state2",
                            StreetAddress = "Address2"
                        });
                });

            modelBuilder.Entity("Async2.Models.HotelRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId", "HotelId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            HotelId = 1,
                            PetFriendly = true,
                            Rate = 100m,
                            RoomNumber = 101
                        },
                        new
                        {
                            RoomId = 2,
                            HotelId = 1,
                            PetFriendly = false,
                            Rate = 120m,
                            RoomNumber = 102
                        },
                        new
                        {
                            RoomId = 3,
                            HotelId = 2,
                            PetFriendly = true,
                            Rate = 150m,
                            RoomNumber = 201
                        });
                });

            modelBuilder.Entity("Async2.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "Room 1"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 1,
                            Name = "Room 2"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 2,
                            Name = "Room 3"
                        });
                });

            modelBuilder.Entity("Async2.Models.RoomAmenity", b =>
                {
                    b.Property<int>("roomId")
                        .HasColumnType("int");

                    b.Property<int>("amenityId")
                        .HasColumnType("int");

                    b.HasKey("roomId", "amenityId");

                    b.HasIndex("amenityId");

                    b.ToTable("RoomAmenities");

                    b.HasData(
                        new
                        {
                            roomId = 1,
                            amenityId = 1
                        },
                        new
                        {
                            roomId = 1,
                            amenityId = 2
                        },
                        new
                        {
                            roomId = 2,
                            amenityId = 1
                        },
                        new
                        {
                            roomId = 3,
                            amenityId = 2
                        });
                });

            modelBuilder.Entity("Async2.Models.HotelRoom", b =>
                {
                    b.HasOne("Async2.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Async2.Models.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Async2.Models.RoomAmenity", b =>
                {
                    b.HasOne("Async2.Models.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("amenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Async2.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("roomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Async2.Models.Amenity", b =>
                {
                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("Async2.Models.Hotel", b =>
                {
                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("Async2.Models.Room", b =>
                {
                    b.Navigation("HotelRooms");

                    b.Navigation("RoomAmenities");
                });
#pragma warning restore 612, 618
        }
    }
}
